{"ast":null,"code":"var _jsxFileName = \"/Users/avrambillig/Desktop/projects/art-interactive/src/Uploader/ImagesUploader.js\",\n    _s = $RefreshSig$();\n\nimport \"./UploadView.scss\";\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImagesUploader = props => {\n  _s();\n\n  const {\n    uploads,\n    setUploads\n  } = props;\n\n  const handleTitleUpdate = (value, idx) => {\n    setUploads([...uploads.slice(0, idx), Object.assign({}, uploads[idx], {\n      title: value\n    }), ...uploads.slice(idx + 1)]);\n  };\n\n  const handleDescriptionUpdate = (value, idx) => {\n    setUploads([...uploads.slice(0, idx), Object.assign({}, uploads[idx], {\n      description: value\n    }), ...uploads.slice(idx + 1)]);\n  };\n\n  const uploadRow = (upload, idx) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sectionBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"uploadImage\",\n          alt: \"upload preview\",\n          src: upload.preview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadDescription\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"title\",\n          className: \"imageInput\",\n          value: upload.headline,\n          onChange: e => handleTitleUpdate(e.target.value, idx)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"description\",\n          className: \"imageInput\",\n          value: upload.description,\n          onChange: e => handleDescriptionUpdate(e.target.value, idx)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  };\n\n  const onDrop = useCallback(files => {\n    const filesWithPreview = files.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    }));\n    setUploads(uploads.concat(filesWithPreview.map((file, idx) => ({\n      preview: file.preview,\n      url: files[idx] // backend needs to read original file without preview\n\n    }))));\n  }, [uploads]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"imageUploadContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: \"dropzone\"\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sectionHeader\",\n      children: \"Additional Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), uploads.map((upload, idx) => uploadRow(upload, idx))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImagesUploader, \"m2/zPeD393EJy9nRT3zys7UD7jw=\", false, function () {\n  return [useDropzone];\n});\n\n_c = ImagesUploader;\nexport default ImagesUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesUploader\");","map":{"version":3,"names":["React","useCallback","useDropzone","ImagesUploader","props","uploads","setUploads","handleTitleUpdate","value","idx","slice","Object","assign","title","handleDescriptionUpdate","description","uploadRow","upload","preview","headline","e","target","onDrop","files","filesWithPreview","map","file","URL","createObjectURL","concat","url","getRootProps","getInputProps","className"],"sources":["/Users/avrambillig/Desktop/projects/art-interactive/src/Uploader/ImagesUploader.js"],"sourcesContent":["import \"./UploadView.scss\";\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nconst ImagesUploader = (props) => {\n  const { uploads, setUploads } = props;\n\n  const handleTitleUpdate = (value, idx) => {\n    setUploads([\n      ...uploads.slice(0, idx),\n      Object.assign({}, uploads[idx], { title: value }),\n      ...uploads.slice(idx + 1),\n    ]);\n  };\n\n  const handleDescriptionUpdate = (value, idx) => {\n    setUploads([\n      ...uploads.slice(0, idx),\n      Object.assign({}, uploads[idx], { description: value }),\n      ...uploads.slice(idx + 1),\n    ]);\n  };\n\n  const uploadRow = (upload, idx) => {\n    return (\n      <div className=\"sectionBody\">\n        <div className=\"imageContainer\">\n          <img\n            className=\"uploadImage\"\n            alt=\"upload preview\"\n            src={upload.preview}\n          />\n        </div>\n        <div className=\"uploadDescription\">\n          <input\n            placeholder=\"title\"\n            className=\"imageInput\"\n            value={upload.headline}\n            onChange={(e) => handleTitleUpdate(e.target.value, idx)}\n          />\n          <input\n            placeholder=\"description\"\n            className=\"imageInput\"\n            value={upload.description}\n            onChange={(e) => handleDescriptionUpdate(e.target.value, idx)}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const onDrop = useCallback(\n    (files) => {\n      const filesWithPreview = files.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      );\n\n      setUploads(\n        uploads.concat(\n          filesWithPreview.map((file, idx) => ({\n            preview: file.preview,\n            url: files[idx], // backend needs to read original file without preview\n          }))\n        )\n      );\n    },\n    [uploads]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  return (\n    <div className=\"imageUploadContainer\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <div className=\"sectionHeader\">Additional Images</div>\n      {uploads.map((upload, idx) => uploadRow(upload, idx))}\n    </div>\n  );\n};\n\nexport default ImagesUploader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}