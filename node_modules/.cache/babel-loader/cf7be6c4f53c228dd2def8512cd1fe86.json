{"ast":null,"code":"var _jsxFileName = \"/Users/avrambillig/Desktop/projects/art-interactive/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport ScrollerStuff from './ScrollerStuff';\nimport Header from './Header';\nimport SplashScreen from './SplashScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [featuredImage, setFeaturedImage] = useState(null);\n  const [apiImages, setApiImages] = useState([]);\n  const [artworkInfo, setArtworkInfo] = useState({});\n  const [displaySplashScreen, setDisplaySplashScreen] = useState(true); // const handleScroll = () => {\n  //   const percentageOfPageScrolledTo = window.scrollY / (window.innerHeight * (apiImages.length));\n  //   const desiredIndex = Math.round(apiImages.length * percentageOfPageScrolledTo);\n  //   if (window.scrollY < window.innerHeight / apiImages.length) {\n  //     setDisplaySplashScreen(true)\n  //   } else if (desiredIndex !== apiImages.indexOf(featuredImage)) {\n  //     setDisplaySplashScreen(false)\n  //     setFeaturedImage(apiImages[desiredIndex]) \n  //   }\n  // }\n\n  useEffect(() => {\n    //TO DO api service \n    fetch('http://localhost:3005/artwork').then(result => result.json()).then(json => {\n      const artworkInfo = json.info[0];\n      setApiImages([artworkInfo, artworkInfo, ...json.images.images]);\n      setFeaturedImage(artworkInfo);\n      setArtworkInfo(artworkInfo);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // useEffect(()=> {\n  //   document.addEventListener('scroll', handleScroll)\n  //   return () => document.removeEventListener('scroll', handleScroll) \n  // }, [apiImages, handleScroll])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      artworkInfo: artworkInfo,\n      displaySplashScreen: displaySplashScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageContent\",\n      children: [displaySplashScreen && /*#__PURE__*/_jsxDEV(SplashScreen, {\n        artworkInfo: artworkInfo,\n        style: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroller\",\n        id: \"scroller\",\n        children: /*#__PURE__*/_jsxDEV(ScrollerStuff, {\n          apiImages: apiImages,\n          featuredImage: featuredImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"aNGTTk2VMhj50MnkMxQOKwO0Dm0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ScrollerStuff","Header","SplashScreen","App","featuredImage","setFeaturedImage","apiImages","setApiImages","artworkInfo","setArtworkInfo","displaySplashScreen","setDisplaySplashScreen","fetch","then","result","json","info","images","catch","err","console","log"],"sources":["/Users/avrambillig/Desktop/projects/art-interactive/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport ScrollerStuff from './ScrollerStuff';\nimport Header from './Header';\nimport SplashScreen from './SplashScreen';\n\nfunction App() {\n  const [featuredImage, setFeaturedImage] = useState(null);\n  const [apiImages, setApiImages] = useState([])\n  const [artworkInfo, setArtworkInfo] = useState({})\n  const [displaySplashScreen, setDisplaySplashScreen] = useState(true)\n\n  // const handleScroll = () => {\n  //   const percentageOfPageScrolledTo = window.scrollY / (window.innerHeight * (apiImages.length));\n  //   const desiredIndex = Math.round(apiImages.length * percentageOfPageScrolledTo);\n  //   if (window.scrollY < window.innerHeight / apiImages.length) {\n  //     setDisplaySplashScreen(true)\n  //   } else if (desiredIndex !== apiImages.indexOf(featuredImage)) {\n  //     setDisplaySplashScreen(false)\n  //     setFeaturedImage(apiImages[desiredIndex]) \n  //   }\n  // }\n\n  useEffect(() => {\n    //TO DO api service \n    fetch('http://localhost:3005/artwork')\n      .then(result => result.json())\n      .then(json => {\n        const artworkInfo = json.info[0]\n        setApiImages([artworkInfo, artworkInfo, ...json.images.images])\n        setFeaturedImage(artworkInfo)\n        setArtworkInfo(artworkInfo)\n      })\n      .catch((err) => {\n        console.log(err);   \n      }); \n  }, [])\n\n  // useEffect(()=> {\n  //   document.addEventListener('scroll', handleScroll)\n  //   return () => document.removeEventListener('scroll', handleScroll) \n  // }, [apiImages, handleScroll])\n\n  return (\n    <>\n      <Header artworkInfo={artworkInfo} displaySplashScreen={displaySplashScreen}/>\n      <div className=\"pageContent\">\n      {displaySplashScreen && <SplashScreen artworkInfo={artworkInfo} style/>}\n        <div className=\"scroller\" id=\"scroller\">\n          <ScrollerStuff apiImages={apiImages} featuredImage={featuredImage} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App"],"mappings":";;;AAAA;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,IAAD,CAAlD;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACY,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,IAAD,CAA9D,CAJa,CAMb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACd;IACAa,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADlB,EAEGF,IAFH,CAEQE,IAAI,IAAI;MACZ,MAAMP,WAAW,GAAGO,IAAI,CAACC,IAAL,CAAU,CAAV,CAApB;MACAT,YAAY,CAAC,CAACC,WAAD,EAAcA,WAAd,EAA2B,GAAGO,IAAI,CAACE,MAAL,CAAYA,MAA1C,CAAD,CAAZ;MACAZ,gBAAgB,CAACG,WAAD,CAAhB;MACAC,cAAc,CAACD,WAAD,CAAd;IACD,CAPH,EAQGU,KARH,CAQUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CAVH;EAWD,CAbQ,EAaN,EAbM,CAAT,CAjBa,CAgCb;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,WAAW,EAAEX,WAArB;MAAkC,mBAAmB,EAAEE;IAAvD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,aAAf;MAAA,WACCA,mBAAmB,iBAAI,QAAC,YAAD;QAAc,WAAW,EAAEF,WAA3B;QAAwC,KAAK;MAA7C;QAAA;QAAA;QAAA;MAAA,QADxB,eAEE;QAAK,SAAS,EAAC,UAAf;QAA0B,EAAE,EAAC,UAA7B;QAAA,uBACE,QAAC,aAAD;UAAe,SAAS,EAAEF,SAA1B;UAAqC,aAAa,EAAEF;QAApD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAWD;;GAhDQD,G;;KAAAA,G;AAkDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}