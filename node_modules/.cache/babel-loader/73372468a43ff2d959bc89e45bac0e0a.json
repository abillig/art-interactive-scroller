{"ast":null,"code":"var _jsxFileName = \"/Users/avrambillig/Desktop/projects/art-interactive/src/UploadView.js\",\n    _s = $RefreshSig$();\n\nimport \"./UploadView.scss\";\nimport axios from \"axios\";\nimport React, { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport ImagesUploader from \"./ImagesUploader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadView = () => {\n  _s();\n\n  const [uploads, setUploads] = useState([]);\n  const [leadImage, setLeadImage] = useState({\n    title: \"lead image\"\n  });\n  const onDrop = useCallback(file => {\n    const uploadedFile = file[0];\n    const image = Object.assign({}, uploadedFile, {\n      preview: URL.createObjectURL(uploadedFile)\n    });\n    setLeadImage(Object.assign({}, leadImage, {\n      preview: image.preview,\n      url: uploadedFile\n    }));\n  }, [leadImage]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n\n  const leadImageTitlepdate = value => {\n    setLeadImage(Object.assign({}, leadImage, {\n      title: value\n    }));\n  };\n\n  async function postImage(_ref) {\n    let {\n      image,\n      description,\n      title,\n      leadImage,\n      artworkId\n    } = _ref;\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    formData.append(\"title\", title);\n    formData.append(\"lead_image\", leadImage);\n\n    if (description) {\n      formData.append(\"description\", description);\n    }\n\n    if (artworkId) {\n      formData.append(\"artwork_id\", artworkId);\n    }\n\n    const result = await axios.post(`${process.env.REACT_APP_API_URL}/images`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return result.data;\n  }\n\n  const submit = async event => {\n    const result = await postImage({\n      image: leadImage.url,\n      title: leadImage.title,\n      leadImage: true\n    });\n    const artworkId = await result.insertId;\n    uploads.forEach(upload => {\n      postImage({\n        image: upload.url,\n        description: upload.description,\n        title: upload.title,\n        leadImage: false,\n        artworkId: artworkId\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploadView\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageUploadContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sectionHeader\",\n        children: \"Lead Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n          className: \"dropzone\"\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop some files here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sectionBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"leadImage\",\n          alt: \"lead\",\n          src: leadImage.preview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadDescription\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"lead image title\",\n            className: \"imageInput\",\n            value: leadImage.name,\n            onChange: e => leadImageTitlepdate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImagesUploader, {\n      uploads: uploads,\n      setUploads: setUploads\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \" Submit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadView, \"v1QV0rlvrDjKjkunApdAY9dG2ZE=\", false, function () {\n  return [useDropzone];\n});\n\n_c = UploadView;\nexport default UploadView;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadView\");","map":{"version":3,"names":["axios","React","useState","useCallback","useDropzone","ImagesUploader","UploadView","uploads","setUploads","leadImage","setLeadImage","title","onDrop","file","uploadedFile","image","Object","assign","preview","URL","createObjectURL","url","getRootProps","getInputProps","leadImageTitlepdate","value","postImage","description","artworkId","formData","FormData","append","result","post","process","env","REACT_APP_API_URL","headers","data","submit","event","insertId","forEach","upload","className","name","e","target"],"sources":["/Users/avrambillig/Desktop/projects/art-interactive/src/UploadView.js"],"sourcesContent":["import \"./UploadView.scss\";\nimport axios from \"axios\";\n\nimport React, { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport ImagesUploader from \"./ImagesUploader\";\n\nconst UploadView = () => {\n  const [uploads, setUploads] = useState([]);\n  const [leadImage, setLeadImage] = useState({ title: \"lead image\" });\n\n  const onDrop = useCallback(\n    (file) => {\n      const uploadedFile = file[0];\n\n      const image = Object.assign({}, uploadedFile, {\n        preview: URL.createObjectURL(uploadedFile),\n      });\n\n      setLeadImage(\n        Object.assign({}, leadImage, {\n          preview: image.preview,\n          url: uploadedFile,\n        })\n      );\n    },\n    [leadImage]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  const leadImageTitlepdate = (value) => {\n    setLeadImage(\n      Object.assign({}, leadImage, {\n        title: value,\n      })\n    );\n  };\n\n  async function postImage({\n    image,\n    description,\n    title,\n    leadImage,\n    artworkId,\n  }) {\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    formData.append(\"title\", title);\n    formData.append(\"lead_image\", leadImage);\n    if (description) {\n      formData.append(\"description\", description);\n    }\n    if (artworkId) {\n      formData.append(\"artwork_id\", artworkId);\n    }\n\n    const result = await axios.post(\n      `${process.env.REACT_APP_API_URL}/images`,\n      formData,\n      {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      }\n    );\n    return result.data;\n  }\n\n  const submit = async (event) => {\n    const result = await postImage({\n      image: leadImage.url,\n      title: leadImage.title,\n      leadImage: true,\n    });\n    const artworkId = await result.insertId;\n    uploads.forEach((upload) => {\n      postImage({\n        image: upload.url,\n        description: upload.description,\n        title: upload.title,\n        leadImage: false,\n        artworkId: artworkId,\n      });\n    });\n  };\n\n  return (\n    <div className=\"uploadView\">\n      <div className=\"imageUploadContainer\">\n        <div className=\"sectionHeader\">Lead Image</div>\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n        <div className=\"sectionBody\">\n          <img className=\"leadImage\" alt=\"lead\" src={leadImage.preview}></img>\n          <div className=\"uploadDescription\">\n            <input\n              placeholder=\"lead image title\"\n              className=\"imageInput\"\n              value={leadImage.name}\n              onChange={(e) => leadImageTitlepdate(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n      <ImagesUploader uploads={uploads} setUploads={setUploads} />\n      <button onClick={submit}> Submit </button>\n    </div>\n  );\n};\n\nexport default UploadView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}