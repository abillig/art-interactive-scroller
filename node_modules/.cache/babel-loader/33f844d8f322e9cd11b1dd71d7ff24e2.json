{"ast":null,"code":"var _jsxFileName = \"/Users/avrambillig/Desktop/projects/art-interactive/src/UploadView.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./UploadView.scss\";\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport TextareaAutosize from \"@mui/base/TextareaAutosize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function postImage(_ref) {\n  let {\n    image,\n    description\n  } = _ref;\n  const formData = new FormData();\n  formData.append(\"image\", image);\n  formData.append(\"description\", description);\n\n  for (var pair of formData.entries()) {\n    console.log(pair[0] + \", \" + pair[1]);\n  } //   const result = await axios.post('http://localhost:3005/images', formData, { headers: {'Content-Type': 'multipart/form-data'}})\n  //   return result.data\n\n}\n\nconst img = {\n  width: \"100px\",\n  marginTop: \"50px\"\n};\n\nfunction UploadView() {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const [value, setValue] = React.useState(\"Controlled\");\n  const onDrop = useCallback(acceptedFiles => {\n    const filesWithPreview = acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    }));\n    setFiles(files => [...files, filesWithPreview]);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: img,\n        src: file.preview // Revoke data uri after image is loaded\n        ,\n        onLoad: () => {\n          URL.revokeObjectURL(file.preview);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        \"aria-label\": \"minimum height\",\n        minRows: 10,\n        placeholder: \"Description\",\n        style: {\n          width: 400\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () => files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, []);\n  const [file, setFile] = useState();\n  const [description, setDescription] = useState(\"\");\n  const [images, setImages] = useState([]);\n\n  const submit = async event => {\n    event.preventDefault();\n    const result = await postImage({\n      image: file,\n      description\n    });\n    setImages([result.image, ...images]);\n  };\n\n  const fileSelected = event => {\n    debugger;\n    const file = event.target.files[0];\n    setFile(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploadView\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: fileSelected,\n        type: \"file\",\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, image, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n          className: \"dropzone\"\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop some files here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: thumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadView, \"c29ofn+UXvGgGtbR0DCfnlEr61c=\", false, function () {\n  return [useDropzone];\n});\n\n_c = UploadView;\nexport default UploadView;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadView\");","map":{"version":3,"names":["useState","useEffect","axios","React","useCallback","useDropzone","TextareaAutosize","postImage","image","description","formData","FormData","append","pair","entries","console","log","img","width","marginTop","UploadView","files","setFiles","value","setValue","onDrop","acceptedFiles","filesWithPreview","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","handleChange","event","target","thumbs","revokeObjectURL","name","forEach","setFile","setDescription","images","setImages","submit","preventDefault","result","fileSelected","e","className"],"sources":["/Users/avrambillig/Desktop/projects/art-interactive/src/UploadView.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"./UploadView.scss\";\n\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport TextareaAutosize from \"@mui/base/TextareaAutosize\";\n\nasync function postImage({ image, description }) {\n  const formData = new FormData();\n  formData.append(\"image\", image);\n  formData.append(\"description\", description);\n\n  for (var pair of formData.entries()) {\n    console.log(pair[0] + \", \" + pair[1]);\n  }\n\n  //   const result = await axios.post('http://localhost:3005/images', formData, { headers: {'Content-Type': 'multipart/form-data'}})\n  //   return result.data\n}\n\nconst img = {\n  width: \"100px\",\n  marginTop: \"50px\",\n};\n\nfunction UploadView() {\n  const [files, setFiles] = useState([]);\n  const [value, setValue] = React.useState(\"Controlled\");\n\n  const onDrop = useCallback((acceptedFiles) => {\n    const filesWithPreview = acceptedFiles.map((file) =>\n      Object.assign(file, {\n        preview: URL.createObjectURL(file),\n      })\n    );\n\n    setFiles((files) => [...files, filesWithPreview]);\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const thumbs = files.map((file) => (\n    <div key={file.name}>\n      <div>\n        <img\n          style={img}\n          src={file.preview}\n          // Revoke data uri after image is loaded\n          onLoad={() => {\n            URL.revokeObjectURL(file.preview);\n          }}\n        />\n        {/* <TextField\n                id=\"standard-multiline-flexible\"\n                label=\"description\"\n                multiline\n                maxRows={40}\n                value={value}\n                onChange={handleChange}\n                variant=\"standard\"\n            /> */}\n        <TextareaAutosize\n          aria-label=\"minimum height\"\n          minRows={10}\n          placeholder=\"Description\"\n          style={{ width: 400 }}\n        />\n      </div>\n    </div>\n  ));\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () => files.forEach((file) => URL.revokeObjectURL(file.preview));\n  }, []);\n\n  const [file, setFile] = useState();\n  const [description, setDescription] = useState(\"\");\n  const [images, setImages] = useState([]);\n\n  const submit = async (event) => {\n    event.preventDefault();\n    const result = await postImage({ image: file, description });\n    setImages([result.image, ...images]);\n  };\n\n  const fileSelected = (event) => {\n    debugger;\n    const file = event.target.files[0];\n    setFile(file);\n  };\n\n  return (\n    <div className=\"uploadView\">\n      <form onSubmit={submit}>\n        <input onChange={fileSelected} type=\"file\" accept=\"image/*\"></input>\n        <input\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          type=\"text\"\n        ></input>\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {images.map((image) => (\n        <div key={image}>\n          <img src={image}></img>\n        </div>\n      ))}\n\n      <section className=\"container\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n        <aside>{thumbs}</aside>\n      </section>\n    </div>\n  );\n}\n\nexport default UploadView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}