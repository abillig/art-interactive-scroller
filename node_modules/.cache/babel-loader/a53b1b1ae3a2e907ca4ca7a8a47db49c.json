{"ast":null,"code":"var _jsxFileName = \"/Users/avrambillig/Desktop/projects/art-interactive/src/ImagesUploader.js\",\n    _s = $RefreshSig$();\n\nimport './UploadView.scss';\nimport React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImagesUploader = props => {\n  _s();\n\n  const {\n    uploads,\n    setUploads\n  } = props;\n\n  const uploadRow = upload => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sectionBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"uploadImage\",\n          src: upload.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadDescription\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"title\",\n          className: \"imageInput\",\n          value: upload.headline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"description\",\n          className: \"imageInput\",\n          value: upload.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this);\n  };\n\n  const onDrop = useCallback(file => {\n    const uploadedFile = file[0];\n    const image = Object.assign({}, uploadedFile, {\n      preview: URL.createObjectURL(uploadedFile)\n    });\n    setLeadImage(Object.assign({}, leadImage, {\n      preview: image.preview,\n      url: image\n    }));\n  }, [leadImage]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"imageUploadContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sectionHeader\",\n      children: \"Additional Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), uploads.map(upload => uploadRow(upload))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImagesUploader, \"m2/zPeD393EJy9nRT3zys7UD7jw=\", false, function () {\n  return [useDropzone];\n});\n\n_c = ImagesUploader;\nexport default ImagesUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesUploader\");","map":{"version":3,"names":["React","useDropzone","ImagesUploader","props","uploads","setUploads","uploadRow","upload","url","headline","description","onDrop","useCallback","file","uploadedFile","image","Object","assign","preview","URL","createObjectURL","setLeadImage","leadImage","getRootProps","getInputProps","map"],"sources":["/Users/avrambillig/Desktop/projects/art-interactive/src/ImagesUploader.js"],"sourcesContent":["import './UploadView.scss';\nimport React from 'react';\nimport { useDropzone } from 'react-dropzone'\n\nconst ImagesUploader = props => {\n    const { uploads, setUploads } = props;\n  const uploadRow = upload => {\n    return (\n    <div className=\"sectionBody\">\n        <div className=\"imageContainer\">\n            <img className=\"uploadImage\"src = {upload.url}/>\n        </div>\n        <div className=\"uploadDescription\">\n            <input placeholder=\"title\" className=\"imageInput\" value={upload.headline}/>\n            <input placeholder=\"description\" className=\"imageInput\" value={upload.description}/>\n        </div>\n    </div>\n    )\n}   \n\nconst onDrop = useCallback(file => {\n\n    const uploadedFile = file[0]\n\n    const image = Object.assign({}, uploadedFile, {\n        preview: URL.createObjectURL(uploadedFile)\n    })\n\n    setLeadImage(Object.assign({}, leadImage, {preview: image.preview, url: image}))\n  }, [leadImage])\n\n  const { getRootProps, getInputProps } = useDropzone({onDrop})\n\n\n  return (\n    <div className=\"imageUploadContainer\">\n        <div className=\"sectionHeader\">Additional Images</div>\n        {uploads.map(upload => uploadRow(upload))}\n    </div>\n  )\n}\n\nexport default ImagesUploader"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;EAAA;;EAC5B,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAA0BF,KAAhC;;EACF,MAAMG,SAAS,GAAGC,MAAM,IAAI;IAC1B,oBACA;MAAK,SAAS,EAAC,aAAf;MAAA,wBACI;QAAK,SAAS,EAAC,gBAAf;QAAA,uBACI;UAAK,SAAS,EAAC,aAAf;UAA4B,GAAG,EAAIA,MAAM,CAACC;QAA1C;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAK,SAAS,EAAC,mBAAf;QAAA,wBACI;UAAO,WAAW,EAAC,OAAnB;UAA2B,SAAS,EAAC,YAArC;UAAkD,KAAK,EAAED,MAAM,CAACE;QAAhE;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,WAAW,EAAC,aAAnB;UAAiC,SAAS,EAAC,YAA3C;UAAwD,KAAK,EAAEF,MAAM,CAACG;QAAtE;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADA;EAWH,CAZC;;EAcF,MAAMC,MAAM,GAAGC,WAAW,CAACC,IAAI,IAAI;IAE/B,MAAMC,YAAY,GAAGD,IAAI,CAAC,CAAD,CAAzB;IAEA,MAAME,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,YAAlB,EAAgC;MAC1CI,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBN,YAApB;IADiC,CAAhC,CAAd;IAIAO,YAAY,CAACL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBK,SAAlB,EAA6B;MAACJ,OAAO,EAAEH,KAAK,CAACG,OAAhB;MAAyBV,GAAG,EAAEO;IAA9B,CAA7B,CAAD,CAAZ;EACD,CATuB,EASrB,CAACO,SAAD,CATqB,CAA1B;EAWE,MAAM;IAAEC,YAAF;IAAgBC;EAAhB,IAAkCvB,WAAW,CAAC;IAACU;EAAD,CAAD,CAAnD;EAGA,oBACE;IAAK,SAAS,EAAC,sBAAf;IAAA,wBACI;MAAK,SAAS,EAAC,eAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKP,OAAO,CAACqB,GAAR,CAAYlB,MAAM,IAAID,SAAS,CAACC,MAAD,CAA/B,CAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CApCD;;GAAML,c;UA2BoCD,W;;;KA3BpCC,c;AAsCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}