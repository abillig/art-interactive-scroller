{"ast":null,"code":"var _jsxFileName = \"/Users/avrambillig/Desktop/projects/art-interactive/src/ArtworkViewer.js\",\n    _s = $RefreshSig$();\n\nimport './App.scss';\nimport React, { useState, useEffect } from 'react';\nimport ScrollerStuff from './ScrollerStuff';\nimport Header from './Header';\nimport SplashScreen from './SplashScreen';\nimport { FaHome } from 'react-icons/fa';\nimport { Outlet, useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ArtworkViewer() {\n  _s();\n\n  const [featuredImage, setFeaturedImage] = useState(null);\n  const [apiImages, setApiImages] = useState([]);\n  const [artworkInfo, setArtworkInfo] = useState({});\n  const [displaySplashScreen, setDisplaySplashScreen] = useState(true);\n  let params = useParams();\n\n  const handleScroll = () => {\n    const percentageOfPageScrolledTo = window.scrollY / (window.innerHeight * apiImages.length);\n    const desiredIndex = Math.round(apiImages.length * percentageOfPageScrolledTo);\n\n    if (desiredIndex > 1 && desiredIndex !== apiImages.indexOf(featuredImage)) {\n      setDisplaySplashScreen(false);\n    } else if (desiredIndex <= 1) {\n      setDisplaySplashScreen(true);\n    }\n\n    setFeaturedImage(apiImages[desiredIndex]);\n  };\n\n  useEffect(() => {\n    //TO DO api service \n    fetch(`http://localhost:3005/artwork/${params.artworkId}`).then(result => result.json()).then(json => {\n      const artworkInfo = json.info[0];\n      setApiImages([artworkInfo, artworkInfo, ...json.images.images]);\n      setArtworkInfo(artworkInfo);\n      setFeaturedImage(artworkInfo);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    document.addEventListener('scroll', handleScroll);\n    return () => document.removeEventListener('scroll', handleScroll);\n  }, [apiImages, handleScroll]);\n  const favIconColor = displaySplashScreen ? \"#1c1b1b\" : \"#efe6e1\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artworkViewer\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/artwork/all`,\n      children: /*#__PURE__*/_jsxDEV(FaHome, {\n        className: \"homeIcon\",\n        style: {\n          color: `${favIconColor}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      artworkInfo: artworkInfo,\n      displaySplashScreen: displaySplashScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageContent\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroller\",\n        children: /*#__PURE__*/_jsxDEV(ScrollerStuff, {\n          apiImages: apiImages,\n          featuredImage: featuredImage,\n          displaySplashScreen: displaySplashScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ArtworkViewer, \"a/ah+9EmoH59n5VaMmiHXOXG5XU=\", false, function () {\n  return [useParams];\n});\n\n_c = ArtworkViewer;\nexport default ArtworkViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtworkViewer\");","map":{"version":3,"names":["React","useState","useEffect","ScrollerStuff","Header","SplashScreen","FaHome","Outlet","useParams","Link","ArtworkViewer","featuredImage","setFeaturedImage","apiImages","setApiImages","artworkInfo","setArtworkInfo","displaySplashScreen","setDisplaySplashScreen","params","handleScroll","percentageOfPageScrolledTo","window","scrollY","innerHeight","length","desiredIndex","Math","round","indexOf","fetch","artworkId","then","result","json","info","images","catch","err","console","log","document","addEventListener","removeEventListener","favIconColor","color"],"sources":["/Users/avrambillig/Desktop/projects/art-interactive/src/ArtworkViewer.js"],"sourcesContent":["import './App.scss';\nimport React, { useState, useEffect } from 'react';\nimport ScrollerStuff from './ScrollerStuff';\nimport Header from './Header';\nimport SplashScreen from './SplashScreen';\nimport { FaHome } from 'react-icons/fa';\nimport { Outlet, useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction ArtworkViewer() {\n    const [featuredImage, setFeaturedImage] = useState(null);\n    const [apiImages, setApiImages] = useState([])\n    const [artworkInfo, setArtworkInfo] = useState({})\n    const [displaySplashScreen, setDisplaySplashScreen] = useState(true)\n    let params = useParams();\n  \n    const handleScroll = () => {\n      const percentageOfPageScrolledTo = window.scrollY / (window.innerHeight * (apiImages.length));\n      const desiredIndex = Math.round(apiImages.length * percentageOfPageScrolledTo);\n  \n      if (desiredIndex > 1 && desiredIndex !== apiImages.indexOf(featuredImage)) {\n        setDisplaySplashScreen(false)\n      } else if (desiredIndex <= 1) {\n        setDisplaySplashScreen(true)\n      }\n      setFeaturedImage(apiImages[desiredIndex]) \n    }\n  \n    useEffect(() => {\n      //TO DO api service \n      fetch(`http://localhost:3005/artwork/${params.artworkId}`)\n        .then(result => result.json())\n        .then(json => {\n          const artworkInfo = json.info[0]\n          setApiImages([artworkInfo, artworkInfo, ...json.images.images])\n          setArtworkInfo(artworkInfo)\n          setFeaturedImage(artworkInfo)\n        })\n        .catch((err) => {\n          console.log(err);   \n        }); \n    }, [])\n  \n    useEffect(()=> {\n      document.addEventListener('scroll', handleScroll)\n      return () => document.removeEventListener('scroll', handleScroll) \n    }, [apiImages, handleScroll])\n  \n    const favIconColor = displaySplashScreen ? \"#1c1b1b\" : \"#efe6e1\"\n    \n    return (\n      <div className=\"artworkViewer\">\n        <Link to={`/artwork/all`}>\n            <FaHome className=\"homeIcon\" style={{color: `${favIconColor}`}}></FaHome>\n        </Link>\n        <Header artworkInfo={artworkInfo} displaySplashScreen={displaySplashScreen}/>\n        <div className=\"pageContent\">\n          <div className=\"scroller\">\n            <ScrollerStuff apiImages={apiImages} featuredImage={featuredImage} displaySplashScreen={displaySplashScreen}/>\n          </div>\n        </div>\n        <Outlet />\n      </div>\n    );\n  }\n\n  export default ArtworkViewer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}