[{"/Users/avrambillig/Desktop/projects/art-interactive/src/index.js":"1","/Users/avrambillig/Desktop/projects/art-interactive/src/App.js":"2","/Users/avrambillig/Desktop/projects/art-interactive/src/reportWebVitals.js":"3","/Users/avrambillig/Desktop/projects/art-interactive/src/scrollerStuff.js":"4","/Users/avrambillig/Desktop/projects/art-interactive/src/ScrollerStuff.js":"5","/Users/avrambillig/Desktop/projects/art-interactive/src/SplashScreen.js":"6","/Users/avrambillig/Desktop/projects/art-interactive/src/Header.js":"7","/Users/avrambillig/Desktop/projects/art-interactive/src/ArtworkViewer.js":"8","/Users/avrambillig/Desktop/projects/art-interactive/src/ArtworkIndex.js":"9","/Users/avrambillig/Desktop/projects/art-interactive/src/ArtworkTile.js":"10","/Users/avrambillig/Desktop/projects/art-interactive/src/UploadView.js":"11","/Users/avrambillig/Desktop/projects/art-interactive/src/Upload.js":"12","/Users/avrambillig/Desktop/projects/art-interactive/src/ImagesUploader.js":"13"},{"size":1191,"mtime":1653307230404,"results":"14","hashOfConfig":"15"},{"size":470,"mtime":1652789214507,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1652366989496,"results":"17","hashOfConfig":"15"},{"size":633,"mtime":1652544755907,"results":"18","hashOfConfig":"15"},{"size":1191,"mtime":1653253117481,"results":"19","hashOfConfig":"15"},{"size":341,"mtime":1652779356023,"results":"20","hashOfConfig":"15"},{"size":527,"mtime":1652789547407,"results":"21","hashOfConfig":"15"},{"size":2636,"mtime":1653253098724,"results":"22","hashOfConfig":"15"},{"size":964,"mtime":1653306899265,"results":"23","hashOfConfig":"15"},{"size":467,"mtime":1653218462109,"results":"24","hashOfConfig":"15"},{"size":3465,"mtime":1653218484647,"results":"25","hashOfConfig":"15"},{"size":2876,"mtime":1653218478379,"results":"26","hashOfConfig":"15"},{"size":2171,"mtime":1653061320897,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17pghlv",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},"/Users/avrambillig/Desktop/projects/art-interactive/src/index.js",[],[],"/Users/avrambillig/Desktop/projects/art-interactive/src/App.js",["81","82","83"],[],"// import logo from './logo.svg';\nimport './App.scss';\nimport React, { useState, useEffect } from 'react';\nimport {\n  Outlet, Link\n} from \"react-router-dom\";\n\nimport ArtworkViewer from './ArtworkViewer';\n\nfunction App() {\n  return (\n    <div>\n      <nav\n        style={{\n          borderBottom: \"solid 1px\",\n          paddingBottom: \"1rem\",\n        }}\n      >\n        <Link to=\"/artwork\">Artwork</Link>\n      </nav>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default App",[],"/Users/avrambillig/Desktop/projects/art-interactive/src/reportWebVitals.js",[],[],[],"/Users/avrambillig/Desktop/projects/art-interactive/src/scrollerStuff.js",["84","85","86","87","88"],[],"// import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\nconst ScrollerStuff = (featuredImage, apiImages) => {\n  const scrollerStyles = {\n    height: `${window.innerHeight * (apiImages.length)}px`\n  }\n\n  debugger;\n\n  return (\n    <div className=\"scroller\" id=\"scroller\">\n      <img className=\"featuredImage\" src={featuredImage && featuredImage[\"url\"]}></img>\n      <div className=\"scrollingPanel\" style={scrollerStyles}>\n        <div className=\"imageDescription\">{featuredImage && featuredImage[\"description\"] || ''}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default ScrollerStuff",[],"/Users/avrambillig/Desktop/projects/art-interactive/src/ScrollerStuff.js",["89"],[],"// import logo from './logo.svg';\nimport \"./App.scss\";\nimport React from \"react\";\n\nconst ScrollerStuff = (props) => {\n  const { featuredImage, apiImages, displaySplashScreen } = props;\n\n  const scrollerStyles = {\n    height: `${window.innerHeight * apiImages.length}px`,\n  };\n\n  const imagesText = apiImages.map((image, idx) => {\n    const leadImage = idx < 2;\n    return (\n      <div className={`imagesText`}>\n        <h3 className=\"imageHeader\">{leadImage ? \"\" : image[\"header\"]}</h3>\n        <div className=\"imageDescription\">\n          {leadImage ? \"\" : image[\"description\"]}\n        </div>\n      </div>\n    );\n  });\n\n  const splashScreen = displaySplashScreen ? \"splash\" : \"\";\n\n  return (\n    <div className={`scroller ${splashScreen}`}>\n      {splashScreen && (\n        <div className=\"splashHeader\">\n          {featuredImage && featuredImage.description}\n        </div>\n      )}\n      <img\n        className={splashScreen ? \"\" : \"featuredImage\"}\n        src={featuredImage && `http://localhost:8080${featuredImage[\"url\"]}`}\n      ></img>\n      <div className=\"scrollingPanel\" style={scrollerStyles}>\n        {imagesText}\n      </div>\n    </div>\n  );\n};\n\nexport default ScrollerStuff;\n",[],"/Users/avrambillig/Desktop/projects/art-interactive/src/SplashScreen.js",["90"],[],"import './App.scss';\nimport React from 'react';\n\nconst SplashScreen = props => {\n  const { artworkInfo } = props\n\n  return (\n    <div className=\"splashScreen\">\n        <h1>{artworkInfo[\"description\"]}</h1>\n      <img className=\"splashScreenImage\" src={artworkInfo && artworkInfo[\"url\"]}></img>\n    </div>\n  );\n}\n\nexport default SplashScreen;","/Users/avrambillig/Desktop/projects/art-interactive/src/Header.js",[],[],"/Users/avrambillig/Desktop/projects/art-interactive/src/ArtworkViewer.js",["91","92","93"],[],"/Users/avrambillig/Desktop/projects/art-interactive/src/ArtworkIndex.js",["94","95"],[],"// import logo from './logo.svg';\nimport \"./App.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport { Outlet, Link } from \"react-router-dom\";\n\nimport ArtworkTile from \"./ArtworkTile\";\n\nfunction ArtworkIndex() {\n  const [artCollection, setArtCollection] = useState([]);\n\n  useEffect(() => {\n    //TO DO api service\n    fetch(`http://localhost:8080/artwork/all`)\n      .then((result) => result.json())\n      .then((json) => {\n        setArtCollection(json[\"artworkCollection\"]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const artworkTiles =\n    artCollection &&\n    artCollection.map((artwork) => {\n      const { artwork_id, url, title } = artwork;\n      return (\n        <ArtworkTile\n          artworkId={artwork_id}\n          url={url}\n          title={title}\n          key={artwork_id}\n        />\n      );\n    });\n\n  return <div className=\"artworkIndex\">{artworkTiles}</div>;\n}\n\nexport default ArtworkIndex;\n","/Users/avrambillig/Desktop/projects/art-interactive/src/ArtworkTile.js",["96"],[],"/Users/avrambillig/Desktop/projects/art-interactive/src/UploadView.js",["97","98","99","100","101","102","103"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"./UploadView.scss\";\n\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport TextareaAutosize from \"@mui/base/TextareaAutosize\";\n\nasync function postImage({ image, description }) {\n  const formData = new FormData();\n  formData.append(\"image\", image);\n  formData.append(\"description\", description);\n\n  for (var pair of formData.entries()) {\n    console.log(pair[0] + \", \" + pair[1]);\n  }\n\n  //   const result = await axios.post('http://localhost:8080/images', formData, { headers: {'Content-Type': 'multipart/form-data'}})\n  //   return result.data\n}\n\nconst img = {\n  width: \"100px\",\n  marginTop: \"50px\",\n};\n\nfunction UploadView() {\n  const [files, setFiles] = useState([]);\n  const [value, setValue] = React.useState(\"Controlled\");\n\n  const onDrop = useCallback((acceptedFiles) => {\n    const filesWithPreview = acceptedFiles.map((file) =>\n      Object.assign(file, {\n        preview: URL.createObjectURL(file),\n      })\n    );\n\n    setFiles((files) => [...files, filesWithPreview]);\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const thumbs = files.map((file) => (\n    <div key={file.name}>\n      <div>\n        <img\n          style={img}\n          src={file.preview}\n          // Revoke data uri after image is loaded\n          onLoad={() => {\n            URL.revokeObjectURL(file.preview);\n          }}\n        />\n        {/* <TextField\n                id=\"standard-multiline-flexible\"\n                label=\"description\"\n                multiline\n                maxRows={40}\n                value={value}\n                onChange={handleChange}\n                variant=\"standard\"\n            /> */}\n        <TextareaAutosize\n          aria-label=\"minimum height\"\n          minRows={10}\n          placeholder=\"Description\"\n          style={{ width: 400 }}\n        />\n      </div>\n    </div>\n  ));\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () => files.forEach((file) => URL.revokeObjectURL(file.preview));\n  }, []);\n\n  const [file, setFile] = useState();\n  const [description, setDescription] = useState(\"\");\n  const [images, setImages] = useState([]);\n\n  const submit = async (event) => {\n    event.preventDefault();\n    const result = await postImage({ image: file, description });\n    setImages([result.image, ...images]);\n  };\n\n  const fileSelected = (event) => {\n    debugger;\n    const file = event.target.files[0];\n    setFile(file);\n  };\n\n  return (\n    <div className=\"uploadView\">\n      <form onSubmit={submit}>\n        <input onChange={fileSelected} type=\"file\" accept=\"image/*\"></input>\n        <input\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          type=\"text\"\n        ></input>\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {images.map((image) => (\n        <div key={image}>\n          <img src={image}></img>\n        </div>\n      ))}\n\n      <section className=\"container\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n        <aside>{thumbs}</aside>\n      </section>\n    </div>\n  );\n}\n\nexport default UploadView;\n",[],"/Users/avrambillig/Desktop/projects/art-interactive/src/Upload.js",["104","105"],[],"import \"./UploadView.scss\";\nimport axios from \"axios\";\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport ImagesUploader from \"./ImagesUploader\";\n\nconst Upload = () => {\n  const [uploads, setUploads] = useState([]);\n  const [leadImage, setLeadImage] = useState({ title: \"lead image\" });\n\n  const onDrop = useCallback(\n    (file) => {\n      const uploadedFile = file[0];\n\n      const image = Object.assign({}, uploadedFile, {\n        preview: URL.createObjectURL(uploadedFile),\n      });\n\n      setLeadImage(\n        Object.assign({}, leadImage, {\n          preview: image.preview,\n          url: uploadedFile,\n        })\n      );\n    },\n    [leadImage]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  const leadImageTitlepdate = (value) => {\n    setLeadImage(\n      Object.assign({}, leadImage, {\n        title: value,\n      })\n    );\n  };\n\n  async function postImage({\n    image,\n    description,\n    title,\n    leadImage,\n    artworkId,\n  }) {\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    formData.append(\"title\", title);\n    formData.append(\"lead_image\", leadImage);\n    if (description) {\n      formData.append(\"description\", description);\n    }\n    if (artworkId) {\n      formData.append(\"artwork_id\", artworkId);\n    }\n\n    const result = await axios.post(\"http://localhost:8080/images\", formData, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    });\n    return result.data;\n  }\n\n  const submit = async (event) => {\n    const result = await postImage({\n      image: leadImage.url,\n      title: leadImage.title,\n      leadImage: true,\n    });\n    const artworkId = await result.insertId;\n    uploads.forEach((upload) => {\n      postImage({\n        image: upload.url,\n        description: upload.description,\n        title: upload.title,\n        leadImage: false,\n        artworkId: artworkId,\n      });\n    });\n  };\n\n  return (\n    <div className=\"uploadView\">\n      <div className=\"imageUploadContainer\">\n        <div className=\"sectionHeader\">Lead Image</div>\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n        <div className=\"sectionBody\">\n          <img className=\"leadImage\" src={leadImage.preview}></img>\n          <div className=\"uploadDescription\">\n            <input\n              placeholder=\"lead image title\"\n              className=\"imageInput\"\n              value={leadImage.name}\n              onChange={(e) => leadImageTitlepdate(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n      <ImagesUploader uploads={uploads} setUploads={setUploads} />\n      <button onClick={submit}> Submit </button>\n    </div>\n  );\n};\n\nexport default Upload;\n","/Users/avrambillig/Desktop/projects/art-interactive/src/ImagesUploader.js",["106","107"],[],"import './UploadView.scss';\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone'\n\nconst ImagesUploader = props => {\n    const { uploads, setUploads } = props;\n\n    const handleTitleUpdate = (value, idx) => {\n        setUploads([\n            ...uploads.slice(0, idx),\n            Object.assign({}, uploads[idx], {title: value}),\n            ...uploads.slice(idx + 1),\n        ])\n    }\n\n    const handleDescriptionUpdate = (value, idx) => {\n        setUploads([\n            ...uploads.slice(0, idx),\n            Object.assign({}, uploads[idx], {description: value}),\n            ...uploads.slice(idx + 1),\n        ])\n    }\n\n  const uploadRow = (upload, idx) => {\n    return (\n    <div className=\"sectionBody\">\n        <div className=\"imageContainer\">\n            <img className=\"uploadImage\"src = {upload.preview}/>\n        </div>\n        <div className=\"uploadDescription\">\n            <input placeholder=\"title\" className=\"imageInput\" \n                value={upload.headline} onChange={e => handleTitleUpdate(e.target.value, idx)}/>\n            <input placeholder=\"description\" className=\"imageInput\" \n                value={upload.description} onChange={e => handleDescriptionUpdate(e.target.value, idx)}/>\n        </div>\n    </div>\n    )\n}   \n\nconst onDrop = useCallback(files => {\n    const filesWithPreview = files.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n    }));\n\n    setUploads(uploads.concat(filesWithPreview.map((file, idx) => (\n        {\n            preview: file.preview, \n            url: files[idx] // backend needs to read original file without preview \n        }\n    ))\n))\n  }, [uploads])\n\n  const { getRootProps, getInputProps } = useDropzone({onDrop})\n\n  return (\n    <div className=\"imageUploadContainer\">\n        <div {...getRootProps({className: 'dropzone'})}>\n                <input {...getInputProps()} />\n                <p>Drag 'n' drop some files here, or click to select files</p>\n            </div>\n        <div className=\"sectionHeader\">Additional Images</div>\n        {uploads.map((upload, idx) => uploadRow(upload, idx))}\n    </div>\n  )\n}\n\nexport default ImagesUploader",[],{"ruleId":"108","severity":1,"message":"109","line":3,"column":17,"nodeType":"110","messageId":"111","endLine":3,"endColumn":25},{"ruleId":"108","severity":1,"message":"112","line":3,"column":27,"nodeType":"110","messageId":"111","endLine":3,"endColumn":36},{"ruleId":"108","severity":1,"message":"113","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":3,"column":17,"nodeType":"110","messageId":"111","endLine":3,"endColumn":25},{"ruleId":"108","severity":1,"message":"112","line":3,"column":27,"nodeType":"110","messageId":"111","endLine":3,"endColumn":36},{"ruleId":"114","severity":1,"message":"115","line":14,"column":7,"nodeType":"116","endLine":14,"endColumn":82},{"ruleId":"117","severity":1,"message":"118","line":16,"column":58,"nodeType":"119","messageId":"120","endLine":16,"endColumn":60},{"ruleId":"117","severity":1,"message":"118","line":16,"column":90,"nodeType":"119","messageId":"120","endLine":16,"endColumn":92},{"ruleId":"114","severity":1,"message":"115","line":33,"column":7,"nodeType":"116","endLine":36,"endColumn":8},{"ruleId":"114","severity":1,"message":"115","line":10,"column":7,"nodeType":"116","endLine":10,"endColumn":82},{"ruleId":"108","severity":1,"message":"121","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":17,"column":9,"nodeType":"124","endLine":30,"endColumn":4},{"ruleId":"122","severity":1,"message":"125","line":52,"column":6,"nodeType":"126","endLine":52,"endColumn":8,"suggestions":"127"},{"ruleId":"108","severity":1,"message":"128","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":16},{"ruleId":"108","severity":1,"message":"129","line":4,"column":18,"nodeType":"110","messageId":"111","endLine":4,"endColumn":22},{"ruleId":"108","severity":1,"message":"130","line":6,"column":22,"nodeType":"110","messageId":"111","endLine":6,"endColumn":25},{"ruleId":"108","severity":1,"message":"131","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":13},{"ruleId":"108","severity":1,"message":"132","line":30,"column":10,"nodeType":"110","messageId":"111","endLine":30,"endColumn":15},{"ruleId":"108","severity":1,"message":"133","line":41,"column":40,"nodeType":"110","messageId":"111","endLine":41,"endColumn":52},{"ruleId":"108","severity":1,"message":"134","line":43,"column":9,"nodeType":"110","messageId":"111","endLine":43,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":50,"column":9,"nodeType":"116","endLine":57,"endColumn":11},{"ruleId":"122","severity":1,"message":"135","line":80,"column":6,"nodeType":"126","endLine":80,"endColumn":8,"suggestions":"136"},{"ruleId":"114","severity":1,"message":"115","line":112,"column":11,"nodeType":"116","endLine":112,"endColumn":28},{"ruleId":"108","severity":1,"message":"112","line":4,"column":27,"nodeType":"110","messageId":"111","endLine":4,"endColumn":36},{"ruleId":"114","severity":1,"message":"115","line":91,"column":11,"nodeType":"116","endLine":91,"endColumn":62},{"ruleId":"114","severity":1,"message":"115","line":28,"column":13,"nodeType":"116","endLine":28,"endColumn":65},{"ruleId":"122","severity":1,"message":"137","line":52,"column":6,"nodeType":"126","endLine":52,"endColumn":15,"suggestions":"138"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'ArtworkViewer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'SplashScreen' is defined but never used.","react-hooks/exhaustive-deps","The 'handleScroll' function makes the dependencies of useEffect Hook (at line 57) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleScroll' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'params.artworkId'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'Outlet' is defined but never used.","'Link' is defined but never used.","'url' is assigned a value but never used.","'axios' is defined but never used.","'value' is assigned a value but never used.","'isDragActive' is assigned a value but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'files'. Either include it or remove the dependency array.",["140"],"React Hook useCallback has a missing dependency: 'setUploads'. Either include it or remove the dependency array.",["141"],{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [params.artworkId]",{"range":"148","text":"149"},"Update the dependencies array to be: [files]",{"range":"150","text":"151"},"Update the dependencies array to be: [setUploads, uploads]",{"range":"152","text":"153"},[1745,1747],"[params.artworkId]",[2234,2236],"[files]",[1665,1674],"[setUploads, uploads]"]